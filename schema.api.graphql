schema {
    query: Query
    mutation: Mutation
}

type Query{
    getImageUploadURL( extension: String, contentType: String): AWSURL
    getMyTimeline(limitL: Int!, nextToken: String): TweetsPage!

    getMyProfile: MyProfile!
    getProfile( screenName: String!) : OtherProfile!

    getTweets(userId: ID!, limit: Int!, nextToken: String) : TweetsPage!
    getLikes(userId: ID!, limit:Int!, nextToken: String): TweetsPage!

    getFollowers(userId: ID!, limit:Int!, nextToken: String): ProfilesPage!
    getFollowing(userId: ID!, limit:Int!, nextToken: String): ProfilesPage!

}

type Mutation{

}

interface IProfile { 
    id: ID!
    name: String!
    screenName: String!
    imageURL: AWSURL
    backgroundImageURL: AWSURL
    bio: String
    location: String
    website: AWSURL
    birthdate: AWSDate
    createdAt: AWSDateTime!
    tweets: TweetsPage !
    followersCount: Int! 
    followingCount: Int!
    tweetsCount: Int!
    likesCounts: Int!
}

type MyProfile implements IProfile{
    id: ID!
    name: String!
    screenName: String!
    imageURL: AWSURL
    backgroundImageURL: AWSURL
    bio: String
    location: String
    website: AWSURL
    birthdate: AWSDate
    createdAt: AWSDateTime!
    tweets: TweetsPage !
    followersCount: Int! 
    followingCount: Int!
    tweetsCount: Int!
    likesCounts: Int!
}

type OtherProfile implements IProfile {
    id: ID!
    name: String!
    screenName: String!
    imageURL: AWSURL
    backgroundImageURL: AWSURL
    bio: String
    location: String
    website: AWSURL
    birthdate: AWSDate
    createdAt: AWSDateTime!
    tweets: TweetsPage !
    followersCount: Int! 
    followingCount: Int!
    tweetsCount: Int!
    likesCounts: Int!
    following: Boolean!
    followedBy: Boolean!
}

interface ITweet {
    id: ID!
    profile: IProfile!
    createdAt: AWSDateTime
}

type Tweet implements ITweet{
    id: ID!
    profile: IProfile!
    createdAt: AWSDateTime! 
    text: String!
    replies: Int!
    likes:Int!
    retweets:Int!
    liked: Boolean!
    retweeted: Boolean! 
}

type Reply implements ITweet{
    id: ID!
    profile: IProfile!
    createdAt: AWSDateTime! 
    inReplyToTweeet: ITweet!
    inReplyToUsers: [IProfile]!
    text: String!
    replies: Int!
    likes:Int!
    retweets:Int!
    liked: Boolean!
    retweeted: Boolean! 
}

type Retweet implements ITweet {
    id: ID!
    profile: IProfile!
    createdAt: AWSDateTime
    retweetOf: ITweet!
}

type TweetsPage{
    tweets: [ITweet!]
    nextToken: String
}

type ProfilesPage {
    profiles: [IProfile!]
    nextToken: String
}